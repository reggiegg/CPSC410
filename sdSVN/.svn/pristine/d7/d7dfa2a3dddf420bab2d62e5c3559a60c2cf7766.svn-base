/*
 * @(#) $Id$
 *
 * Copyright (c) 2010 Steven Drinovsky. All Rights Reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

package org.sjd.visualapigraphview;

import java.awt.BorderLayout;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;

import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JScrollPane;

import org.sdrinovsky.sdsvn.files.FileTableRow;
import org.sdrinovsky.sdsvn.files.Location;

import org.jdesktop.application.Action;

/**
 *
 * @author  sdrinovsky
 */
public class GraphViewFrame extends javax.swing.JFrame {
  private RevisionGraph graph;
  private JFrame        satelliteView = new JFrame();
  private JScrollPane   scroll;
  private boolean       wasSatelliteViewShown = false;

  /**
   * Creates new form GraphView
   *
   * @param row
   * @param location
   * @param root
   */
  public GraphViewFrame(FileTableRow row, Location location, GraphTree root) {
    initComponents();

    graph = new RevisionGraph(row, location);

    graph.setMesagePane(jTextArea1);

    JComponent scene = graph.buildScene(root);

    scroll = new JScrollPane(scene);

    scroll.getVerticalScrollBar().setUnitIncrement(60);
    scroll.getVerticalScrollBar().setBlockIncrement(60);
    jSplitPane1.setTopComponent(scroll);
    satelliteView.getContentPane().add(graph.getSatelliteView(), BorderLayout.CENTER);
    satelliteView.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    satelliteView.addComponentListener(new ComponentAdapter() {
      @Override
      public void componentHidden(ComponentEvent e) {
        super.componentHidden(e);
        jToggleButton1.setSelected(false);
      }
    });
  }

  /**
   * Method dispose
   *
   *
   */
  @Override
  public void dispose() {
    satelliteView.dispose();
    super.dispose();
  }

  /**
   * This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    jSplitPane1    = new javax.swing.JSplitPane();
    jScrollPane1   = new javax.swing.JScrollPane();
    jTextArea1     = new javax.swing.JTextArea();
    jToolBar1      = new javax.swing.JToolBar();
    jToggleButton1 = new javax.swing.JToggleButton();
    jComboBox1     = new javax.swing.JComboBox();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setName("Form");                         // NOI18N
    jSplitPane1.setDividerLocation(350);
    jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
    jSplitPane1.setResizeWeight(1.0);
    jSplitPane1.setName("jSplitPane1");      // NOI18N
    jScrollPane1.setName("jScrollPane1");    // NOI18N
    jTextArea1.setColumns(20);
    jTextArea1.setRows(5);
    jTextArea1.setName("jTextArea1");        // NOI18N
    jScrollPane1.setViewportView(jTextArea1);
    jSplitPane1.setBottomComponent(jScrollPane1);
    jToolBar1.setFloatable(false);
    jToolBar1.setRollover(true);
    jToolBar1.setName("jToolBar1");          // NOI18N

    javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(
       org.sdrinovsky.sdsvn.SVNApp.class).getContext().getActionMap(GraphViewFrame.class, this);

    jToggleButton1.setAction(actionMap.get("satelliteView"));    // NOI18N
    jToggleButton1.setFocusable(false);
    jToggleButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jToggleButton1.setName("jToggleButton1");                    // NOI18N
    jToggleButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jToolBar1.add(jToggleButton1);
    jComboBox1.setEditable(true);
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"400%", "200%", "100%", "50%", "10%", "5%"}));
    jComboBox1.setSelectedItem("100%");
    jComboBox1.setMaximumSize(new java.awt.Dimension(70, 32767));
    jComboBox1.setName("jComboBox1");                            // NOI18N
    jComboBox1.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        jComboBox1ItemStateChanged(evt);
      }
    });
    jToolBar1.add(jComboBox1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());

    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
       layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
         jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE).addComponent(
         jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE));
    layout.setVerticalGroup(
       layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
         layout.createSequentialGroup().addComponent(
           jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25,
           javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(
             javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(
             jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)));

    java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();

    setBounds((screenSize.width - 517) / 2, (screenSize.height - 588) / 2, 517, 588);
  }                                                                          // </editor-fold>//GEN-END:initComponents

  private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {    //GEN-FIRST:event_jComboBox1ItemStateChanged
    updateZoom();
  }    //GEN-LAST:event_jComboBox1ItemStateChanged

  /**
   * Method updateZoom
   *
   *
   */
  public void updateZoom() {
    String zoomString = jComboBox1.getSelectedItem().toString();

    if(zoomString.charAt(zoomString.length() - 1) == '%') {
      zoomString = zoomString.substring(0, zoomString.length() - 1);
    }

    double zoomFactor = Double.parseDouble(zoomString) / 100.0;

    scroll.getVerticalScrollBar().setUnitIncrement((int)(60 * zoomFactor));
    scroll.getVerticalScrollBar().setBlockIncrement((int)(60 * zoomFactor));
    graph.setZoom(zoomFactor);
  }

  /**
   * Method satelliteView
   *
   *
   */
  @Action
  public void satelliteView() {
    if(jToggleButton1.isSelected()) {
      if( !wasSatelliteViewShown) {
        wasSatelliteViewShown = true;

        int y = getY() - 200;

        if(y < 0) {
          y = 0;
        }

        satelliteView.setBounds(getX(), y, getWidth(), 200);
      }

      satelliteView.setVisible(true);
    } else {
      satelliteView.setVisible(false);
    }
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JComboBox     jComboBox1;
  private javax.swing.JScrollPane   jScrollPane1;
  private javax.swing.JSplitPane    jSplitPane1;
  private javax.swing.JTextArea     jTextArea1;
  private javax.swing.JToggleButton jToggleButton1;
  private javax.swing.JToolBar      jToolBar1;
  // End of variables declaration//GEN-END:variables
}
